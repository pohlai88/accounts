# ============================================================================
# AI-BOS Accounting SaaS - Development Docker Compose
# ============================================================================
# Development environment with hot reload and debugging support
# Follows development best practices and SSOT principles

version: "3.8"

# ============================================================================
# Services Configuration
# ============================================================================
services:
  # ============================================================================
  # Main Application Service (Development)
  # ============================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: aibos-accounting-api-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9229:9229"  # Node.js debug port
    environment:
      # Development Environment
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0

      # Database Configuration
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0

      # Development Configuration
      - TRUST_PROXY=false
      - CORS_ORIGIN=http://localhost:3000,http://localhost:5173

      # API Configuration
      - API_VERSION=1.0.0-dev
      - ENABLE_LOGGING=true
      - ENABLE_METRICS=true

      # Rate Limiting (Relaxed for development)
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000

      # Debug Configuration
      - DEBUG=aibos:*
      - NODE_OPTIONS=--inspect=0.0.0.0:9229

    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/dist
    command: pnpm dev
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aibos-dev-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # Redis Cache Service (Development)
  # ============================================================================
  redis:
    image: redis:7-alpine
    container_name: aibos-accounting-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      redis-server
      --appendonly yes
      --requirepass ${REDIS_PASSWORD:-}
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_dev_data:/data
    networks:
      - aibos-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # ============================================================================
  # Database Service (Optional - for local development)
  # ============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: aibos-accounting-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=aibos_accounting_dev
      - POSTGRES_USER=aibos
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-aibos123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - aibos-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aibos -d aibos_accounting_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # ============================================================================
  # Redis Commander (Development UI)
  # ============================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: aibos-accounting-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin123}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aibos-dev-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

# ============================================================================
# Networks Configuration
# ============================================================================
networks:
  aibos-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# ============================================================================
# Volumes Configuration
# ============================================================================
volumes:
  redis_dev_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis-dev
  postgres_dev_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres-dev
